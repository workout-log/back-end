name: Docker

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: image

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  build:
    runs-on: ubuntu:18.04

    steps:
      - uses: actions/checkout@v2
      - name: Pull a git-secret and build Docker
        run: |
          echo Hello,
          sudo apt-get update && sudo apt-get install git-secret,
          echo after install git-secret
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
#   push:
#     # Ensure test job passes before pushing image.
#     needs: build

#     runs-on: ubuntu-latest
#     if: github.event_name == 'push'

#     steps:
#       - uses: actions/checkout@v2

#       - name: Build image
#         run: docker build . --file Dockerfile --tag $IMAGE_NAME

#       - name: Log into registry
#         run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

#       - name: Push image
#         run: |
#           IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

#           # Change all uppercase to lowercase
#           IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

#           # Strip git ref prefix from version
#           VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

#           # Strip "v" prefix from tag name
#           [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

#           # Use Docker `latest` tag convention
#           [ "$VERSION" == "master" ] && VERSION=latest

#           echo IMAGE_ID=$IMAGE_ID
#           echo VERSION=$VERSION

#           docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
#           docker push $IMAGE_ID:$VERSION
